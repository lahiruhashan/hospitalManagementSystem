/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital.management.system;

import hospital.management.system.connection.DBConnect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hashan
 */
public class PendingResults extends javax.swing.JFrame {

    /**
     * Creates new form PendingResults
     */
    
    //global  variables
    private Connection con;
    private int nurseId;
    
    public PendingResults() {
        initComponents();
    }
    
    //overloading constructor
    public PendingResults(int nurseId) {
        initComponents();
        this.nurseId = nurseId;
    }
    
    //create the database connection
    public void createConnectoin() {
        DBConnect db = new DBConnect();
        this.con = db.createConnection();
    }
    
    // get the pending test details of the given patient
    public void pendingTest(){
         try {
            PreparedStatement ps = con.prepareStatement("select * from patient_test where result is null");
            
            ResultSet rs = ps.executeQuery();
             
            while(rs.next()){
                
                int testId = rs.getInt("test_id");
                int testNumber = rs.getInt("test_number");
                int nic = rs.getInt("nic");
                int recommendation = rs.getInt("recommendation");
                String date = rs.getString("date");
                String time = rs.getString("time");
                
                String recommendedNBy = "";
                String testName = "";   

                //get the doctor name from the id
                PreparedStatement pst = con.prepareStatement("select name from employee where employee_id = ?");
                pst.setInt(1, recommendation);
                ResultSet rst = pst.executeQuery();
                
                while(rst.next()){
                    recommendedNBy = rst.getString("name");
                    
                    // get the test name
                    PreparedStatement pss = con.prepareStatement("select * from test where test_id = ?");
                    pss.setInt(1, testId);
                    ResultSet rss = pss.executeQuery();
                    
                    while(rss.next()){
                        testName = rss.getString("test_name");
                        DefaultTableModel tableModel = (DefaultTableModel) testResultTable.getModel();
                        tableModel.addRow(new Object[] {testNumber,nic,testName,recommendedNBy,date,time});
                    }
                }
            }
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        testResultTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(51, 51, 51));
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        testResultTable.setBackground(new java.awt.Color(51, 51, 51));
        testResultTable.setFont(new java.awt.Font("Quicksand", 0, 14)); // NOI18N
        testResultTable.setForeground(new java.awt.Color(255, 255, 255));
        testResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Test Number", "Patient NIC", "Test Name", "Remmended By", "Date", "Time", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        testResultTable.setGridColor(new java.awt.Color(0, 152, 216));
        testResultTable.setRowHeight(50);
        testResultTable.setSelectionBackground(new java.awt.Color(0, 152, 216));
        testResultTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        testResultTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                testResultTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(testResultTable);
        if (testResultTable.getColumnModel().getColumnCount() > 0) {
            testResultTable.getColumnModel().getColumn(0).setResizable(false);
            testResultTable.getColumnModel().getColumn(1).setResizable(false);
            testResultTable.getColumnModel().getColumn(2).setResizable(false);
            testResultTable.getColumnModel().getColumn(3).setResizable(false);
            testResultTable.getColumnModel().getColumn(4).setResizable(false);
            testResultTable.getColumnModel().getColumn(5).setResizable(false);
            testResultTable.getColumnModel().getColumn(6).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 570));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void testResultTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_testResultTableMouseClicked
        // get selected values of the table
        DefaultTableModel model = (DefaultTableModel) testResultTable.getModel();
        int row = testResultTable.getSelectedRow();
        int patientNic = (int) model.getValueAt(row, 1);
        String testName = (String) model.getValueAt(row, 2);
        int testNumber = (int) model.getValueAt(row, 0);
        
        EnterResults enterResults = new EnterResults(patientNic,testName,testNumber,nurseId);
        enterResults.createConnection();
        enterResults.setValues();
        enterResults.setVisible(true);
        
        model.setValueAt("Updating...", row, 6);
    }//GEN-LAST:event_testResultTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PendingResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PendingResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PendingResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PendingResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PendingResults().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable testResultTable;
    // End of variables declaration//GEN-END:variables
}
