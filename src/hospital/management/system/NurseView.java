/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital.management.system;

import hospital.management.system.connection.DBConnect;
import hospital.management.system.connection.GetEmployeeName;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hashan
 */
public class NurseView extends javax.swing.JFrame {

    /**
     * Creates new form NurseView
     */
    
    //global variables
    private String username;
    private Connection con;
    private ResultSet rs;
    
    public NurseView() {
        initComponents();
    }
    
    // overload constructor
     public NurseView(String username) {
        initComponents();
        this.username = username;        
    }
     
    // close listener for close button click
    protected void closeListener(){
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent we) {
                System.exit(0);
            }
        });
    }
    
    // set employee name who is logged in
    protected void setEmployeeName(){
        //get the name of the logged user
        GetEmployeeName setName = new GetEmployeeName();
        String name = setName.getName(username);
        String namePartials[] = name.split(" ");
        loggedUser.setText(namePartials[0]);
    }
    
     //create database connection
    public void createConnectoin() {
        DBConnect db = new DBConnect();
        this.con = db.createConnection();

    }

    // fill the table with all the patients
    public void fillTable() {
        try {
            PreparedStatement pss = con.prepareStatement("select * from patient where discharge_date is NULL");
            ResultSet resultSet;
            resultSet = pss.executeQuery();

            while (resultSet.next()) {
                String add1 = resultSet.getString("nic");
                String add2 = resultSet.getString("name");
                String add3 = resultSet.getString("gender");
                String add4 = resultSet.getString("ward");
                String add5 = resultSet.getString("confirmation");
                String add6 = resultSet.getString("consultant");
                String add7 = resultSet.getString("admit_date");

                DefaultTableModel model = (DefaultTableModel) patientTable.getModel();
                model.addRow(new Object[]{add1, add2, add3, add4, add5, add6, add7});

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Fill Table Failed");
        }
    }
    
    // get and display the pending test count
    public void pendingTestCounter(){
        try{
            PreparedStatement ps = con.prepareStatement("select * from patient_test where result is NULL");
       
            ResultSet resultSet;
            resultSet = ps.executeQuery();
            int count = 0;
            while (resultSet.next()) {
                count++;
            }
            testCounter.setText(String.valueOf(count));
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Pending Test Counter Failed");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pendingResultButton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        searchText = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        logOutButton = new javax.swing.JButton();
        loggedUser = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        testCounter = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pendingResultButton.setBackground(new java.awt.Color(0, 152, 216));
        pendingResultButton.setFont(new java.awt.Font("Quicksand", 1, 14)); // NOI18N
        pendingResultButton.setForeground(new java.awt.Color(255, 255, 255));
        pendingResultButton.setText("Pending Tests");
        pendingResultButton.setBorder(null);
        pendingResultButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pendingResultButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        pendingResultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pendingResultButtonActionPerformed(evt);
            }
        });
        jPanel1.add(pendingResultButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, 130, 60));

        jPanel10.setBackground(new java.awt.Color(51, 51, 51));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/searched.png"))); // NOI18N
        jPanel10.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 40, 48));

        searchText.setBackground(new java.awt.Color(51, 51, 51));
        searchText.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 18)); // NOI18N
        searchText.setForeground(new java.awt.Color(255, 255, 255));
        searchText.setText("Search");
        searchText.setBorder(null);
        searchText.setCaretColor(new java.awt.Color(255, 255, 255));
        searchText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        searchText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTextMouseClicked(evt);
            }
        });
        searchText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextKeyReleased(evt);
            }
        });
        jPanel10.add(searchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 310, 30));

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 310, 10));

        jPanel1.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 410, -1));

        logOutButton.setBackground(new java.awt.Color(0, 152, 216));
        logOutButton.setFont(new java.awt.Font("Quicksand", 1, 14)); // NOI18N
        logOutButton.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Logout Rounded Up-20.png"))); // NOI18N
        logOutButton.setText("Log Out");
        logOutButton.setBorder(null);
        logOutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        logOutButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        logOutButton.setIconTextGap(10);
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });
        jPanel1.add(logOutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 60, 140, 30));

        loggedUser.setBackground(new java.awt.Color(0, 152, 216));
        loggedUser.setFont(new java.awt.Font("Quicksand", 1, 14)); // NOI18N
        loggedUser.setForeground(new java.awt.Color(255, 255, 255));
        loggedUser.setText("Current User");
        loggedUser.setBorder(null);
        loggedUser.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        loggedUser.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(loggedUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 10, 140, 30));

        jPanel2.setBackground(new java.awt.Color(0, 152, 216));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        testCounter.setBackground(new java.awt.Color(0, 0, 0));
        testCounter.setFont(new java.awt.Font("Quicksand", 1, 24)); // NOI18N
        testCounter.setForeground(new java.awt.Color(255, 0, 0));
        testCounter.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        testCounter.setText("1");
        testCounter.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        testCounter.setFocusable(false);
        testCounter.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        testCounter.setRequestFocusEnabled(false);
        testCounter.setVerifyInputWhenFocusTarget(false);
        jPanel2.add(testCounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 20, 60));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 20, 40, 60));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 100));

        jScrollPane1.setBackground(new java.awt.Color(51, 51, 51));

        patientTable.setAutoCreateRowSorter(true);
        patientTable.setBackground(new java.awt.Color(51, 51, 51));
        patientTable.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 12)); // NOI18N
        patientTable.setForeground(new java.awt.Color(255, 255, 255));
        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIC", "Patient Name", "Gender", "Ward Number", "Confirmation", "Consultant", "Admit Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        patientTable.setFocusTraversalPolicyProvider(true);
        patientTable.setGridColor(new java.awt.Color(51, 51, 51));
        patientTable.setRowHeight(50);
        patientTable.setSelectionBackground(new java.awt.Color(0, 204, 204));
        patientTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        patientTable.setShowHorizontalLines(false);
        patientTable.setShowVerticalLines(false);
        patientTable.getTableHeader().setResizingAllowed(false);
        patientTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(patientTable);
        if (patientTable.getColumnModel().getColumnCount() > 0) {
            patientTable.getColumnModel().getColumn(0).setResizable(false);
            patientTable.getColumnModel().getColumn(1).setResizable(false);
            patientTable.getColumnModel().getColumn(2).setResizable(false);
            patientTable.getColumnModel().getColumn(3).setResizable(false);
            patientTable.getColumnModel().getColumn(4).setResizable(false);
            patientTable.getColumnModel().getColumn(5).setResizable(false);
            patientTable.getColumnModel().getColumn(6).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 990, 510));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTextMouseClicked
        searchText.setText("");
    }//GEN-LAST:event_searchTextMouseClicked

    private void searchTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextKeyReleased

        DefaultTableModel model = (DefaultTableModel) patientTable.getModel();

        // fill with all the patient details if the search field is empty
        if (searchText.getText().equals("")) {

            model.setRowCount(0);
            fillTable();

        }

        // fill the table with patient details of the given nic
        try {
            
            model.setRowCount(0);
            
            String query = "select * from patient where nic LIKE ?";
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, searchText.getText()+"%");
            rs = pst.executeQuery();

            while (rs.next()) {

                String add1 = rs.getString("nic");
                String add2 = rs.getString("name");
                String add3 = rs.getString("gender");
                String add4 = rs.getString("ward");
                String add5 = rs.getString("confirmation");
                String add6 = rs.getString("consultant");
                String add7 = rs.getString("admit_date");

                
                model.addRow(new Object[]{add1, add2, add3, add4, add5, add6, add7});
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Invalid Patient NIC Value");
        }
    }//GEN-LAST:event_searchTextKeyReleased

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        Login login = new Login();
        login.closeListener();
        login.currentDateTime();
        login.setVisible(true);
        dispose();
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void pendingResultButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pendingResultButtonActionPerformed
        PendingResults pendingResults = new PendingResults(Integer.parseInt(username));
        pendingResults.createConnectoin();
        pendingResults.pendingTest();
        pendingResults.setVisible(true);
    }//GEN-LAST:event_pendingResultButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NurseView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NurseView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NurseView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NurseView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NurseView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton logOutButton;
    private javax.swing.JButton loggedUser;
    private javax.swing.JTable patientTable;
    private javax.swing.JButton pendingResultButton;
    private javax.swing.JTextField searchText;
    private javax.swing.JLabel testCounter;
    // End of variables declaration//GEN-END:variables
}
