/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital.management.system;

import hospital.management.system.connection.DBConnect;
import hospital.management.system.connection.FillTable;
import hospital.management.system.connection.GetEmployeeName;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hashan
 */
public final class DoctorView extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    
    //declaring the global variables
    private String username;
    private Connection con;
    private ResultSet rs;

    public DoctorView() {
        initComponents();
    }
    
    // overloading the constructor
    public DoctorView(String username) {
        initComponents();
        this.username = username;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        loggedUser = new javax.swing.JButton();
        logOutButton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        searchText = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        patientProfileButton = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        setForeground(java.awt.Color.black);
        setMaximumSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(51, 51, 51));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loggedUser.setBackground(new java.awt.Color(0, 152, 216));
        loggedUser.setFont(new java.awt.Font("Quicksand", 1, 14)); // NOI18N
        loggedUser.setForeground(new java.awt.Color(255, 255, 255));
        loggedUser.setText("Current User");
        loggedUser.setBorder(null);
        loggedUser.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        loggedUser.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanel7.add(loggedUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 140, 30));

        logOutButton.setBackground(new java.awt.Color(0, 152, 216));
        logOutButton.setFont(new java.awt.Font("Quicksand", 1, 14)); // NOI18N
        logOutButton.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Logout Rounded Up-20.png"))); // NOI18N
        logOutButton.setText("Log Out");
        logOutButton.setBorder(null);
        logOutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        logOutButton.setIconTextGap(10);
        logOutButton.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });
        jPanel7.add(logOutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 140, 30));

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 0, 160, 90));

        jPanel10.setBackground(new java.awt.Color(51, 51, 51));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/searched.png"))); // NOI18N
        jPanel10.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 40, 48));

        searchText.setBackground(new java.awt.Color(51, 51, 51));
        searchText.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 18)); // NOI18N
        searchText.setForeground(new java.awt.Color(255, 255, 255));
        searchText.setText("Search");
        searchText.setBorder(null);
        searchText.setCaretColor(new java.awt.Color(255, 255, 255));
        searchText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        searchText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTextMouseClicked(evt);
            }
        });
        searchText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextKeyReleased(evt);
            }
        });
        jPanel10.add(searchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 310, 30));

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 310, 10));

        jPanel1.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 410, -1));

        patientProfileButton.setBackground(new java.awt.Color(0, 152, 216));
        patientProfileButton.setFont(new java.awt.Font("Quicksand", 1, 14)); // NOI18N
        patientProfileButton.setForeground(new java.awt.Color(255, 255, 255));
        patientProfileButton.setText("Patient Profile");
        patientProfileButton.setBorder(null);
        patientProfileButton.setEnabled(false);
        patientProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientProfileButtonActionPerformed(evt);
            }
        });
        jPanel1.add(patientProfileButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, 100, 70));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 90));

        jPanel13.setBackground(new java.awt.Color(51, 51, 51));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(51, 51, 51));

        patientTable.setAutoCreateRowSorter(true);
        patientTable.setBackground(new java.awt.Color(51, 51, 51));
        patientTable.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 12)); // NOI18N
        patientTable.setForeground(new java.awt.Color(255, 255, 255));
        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIC", "Patient Name", "Gender", "Ward Number", "Confirmation", "Consultant", "Admit Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        patientTable.setFocusTraversalPolicyProvider(true);
        patientTable.setGridColor(new java.awt.Color(51, 51, 51));
        patientTable.setRowHeight(50);
        patientTable.setSelectionBackground(new java.awt.Color(0, 102, 204));
        patientTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        patientTable.setShowHorizontalLines(false);
        patientTable.setShowVerticalLines(false);
        patientTable.getTableHeader().setResizingAllowed(false);
        patientTable.getTableHeader().setReorderingAllowed(false);
        patientTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patientTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(patientTable);
        if (patientTable.getColumnModel().getColumnCount() > 0) {
            patientTable.getColumnModel().getColumn(0).setResizable(false);
            patientTable.getColumnModel().getColumn(1).setResizable(false);
            patientTable.getColumnModel().getColumn(2).setResizable(false);
            patientTable.getColumnModel().getColumn(3).setResizable(false);
            patientTable.getColumnModel().getColumn(4).setResizable(false);
            patientTable.getColumnModel().getColumn(5).setResizable(false);
            patientTable.getColumnModel().getColumn(6).setResizable(false);
        }

        jPanel13.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1370, 580));

        getContentPane().add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 1370, 590));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

     //close button click listener
    
    protected void closeListener(){
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent we) {
                System.exit(0);
            }
        });
    }
    
    // set employee name who is logged in
    protected void setEmployeeName(){
        //get the name of the logged user
        GetEmployeeName setName = new GetEmployeeName();
        String name = setName.getName(username);
        String namePartials[] = name.split(" ");
        loggedUser.setText(namePartials[0]);
    }
    
    //creating the databse connection
    public void createConnectoin() {
        DBConnect db = new DBConnect();
        this.con = db.createConnection();

    }

    //fill the table with patients
    public void fillTable() {
        DefaultTableModel model = (DefaultTableModel) patientTable.getModel();
        FillTable fill = new FillTable();
        fill.fillTable(model, username);
    }

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        //opening the login window when logout button is clicked
        Login login = new Login();
        login.closeListener();
        login.currentDateTime();
        login.setVisible(true);
        dispose();
    }//GEN-LAST:event_logOutButtonActionPerformed


    private void searchTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTextMouseClicked
        //remove the current text when clicked
        searchText.setText("");
    }//GEN-LAST:event_searchTextMouseClicked

    private void searchTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextKeyReleased

        DefaultTableModel model = (DefaultTableModel) patientTable.getModel();

        // fill table with all patients when the text field is empty
        if (searchText.getText().equals("")) {
            model.setRowCount(0);
            fillTable();
        }else{
            //fill the table with matching user input
            String nic = searchText.getText();
            FillTable fill = new FillTable();
            fill.fillSearch(model, nic);
        }
    }//GEN-LAST:event_searchTextKeyReleased

    private void patientTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patientTableMouseClicked

        //enable the patient profile button after clicking a record in the table
        patientProfileButton.setEnabled(true);
    }//GEN-LAST:event_patientTableMouseClicked

    private void patientProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientProfileButtonActionPerformed
        //open the selected patients profile
        try{
            DefaultTableModel model = (DefaultTableModel) patientTable.getModel();
            int row = patientTable.getSelectedRow();
            String nic = (String) model.getValueAt(row, 0);

            PatientProfile patientProfile = new PatientProfile(Integer.parseInt(nic),Integer.parseInt(username));
            patientProfile.createConnectoin();
            patientProfile.display();
            patientProfile.fillTable();
            patientProfile.setVisible(true);
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Selection Invalid");
        }
        
    }//GEN-LAST:event_patientProfileButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold> 

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoctorView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton logOutButton;
    private javax.swing.JButton loggedUser;
    private javax.swing.JButton patientProfileButton;
    private javax.swing.JTable patientTable;
    private javax.swing.JTextField searchText;
    // End of variables declaration//GEN-END:variables
}
